@inherits EditAccountDialog
@using Interfaces
@using Models

@inject IAppState _appState
@inject IDataAccess _data

<div class="row">
    <div class="col">
        Current Gender:
    </div>
    <div class="col">
        @_appState.CurrentUser.Gender
    </div>
</div>
<div class="row">
    <EditForm EditContext=editContext>
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col">
                New Gender:
            </div>
            <div class="col">
                <InputSelect class="form-control" @bind-Value=newAccount.Gender>
                    @foreach (var gender in Enum.GetValues(typeof(GenderType)))
                    {
                        <option value="@gender">@gender</option>
                    }
                </InputSelect>
            </div>
        </div>
    </EditForm>
</div>
<div class="row">
    <button type="button" class="btn btn-primary" @onclick="OnEnter">Enter</button>
</div>

@code {
    private async Task OnEnter()
    {
        await _appState.ShowLoadingScreenWhileAwaiting(Enter);
    }

    private async Task Enter()
    {
        string sql = "Update account set gender = @name where id = @userid;";
        int affectedRows = await _data.SaveData(sql, new { @name = newAccount.Gender.ToString(), @userid = _appState.CurrentUser.Id });
        if (affectedRows == 1)
        {
            _appState.CurrentUser.Gender = newAccount.Gender;
            await InvokeAsync(StateHasChanged);
        }
        else
            throw new Exception("Error editing username.");
    }
}