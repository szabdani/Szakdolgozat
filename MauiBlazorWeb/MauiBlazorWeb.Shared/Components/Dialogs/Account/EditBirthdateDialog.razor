@inherits EditAccountDialog
@using Interfaces
@using Models

@inject IAppState _appState
@inject IAccountAPIService _accountAPI

<div class="row">
    <div class="col">
        Current Date of birth:
    </div>
    <div class="col">
        @_appState.CurrentUser.Birthdate.ToShortDateString()
    </div>
</div>
<div class="row">
    <EditForm EditContext=editContext>
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col">
                New Date of Birth:
            </div>
            <div class="col">
                <InputDate class="form-control" @bind-Value=newAccount.Birthdate />
            </div>
        </div>
    </EditForm>
</div>
<div class="row">
    <button type="button" class="btn btn-primary" @onclick="OnEnter">Enter</button>
</div>

@code {
    private async Task OnEnter()
    {
        await _appState.ShowLoadingScreenWhileAwaiting(Enter);
    }

    private async Task Enter()
    {
        _appState.CurrentUser.Birthdate = newAccount.Birthdate;
        bool isCorrect = await _accountAPI.UpdateAccount(_appState.CurrentUser);
        if (isCorrect)
            await InvokeAsync(StateHasChanged);
        else
            throw new Exception("Error editing birthdate.");
    }
}