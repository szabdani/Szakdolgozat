@inherits SportCompBase

@using Bases
@using Models.Sports
@using MauiBlazorWeb.Shared.Components.Icons

@if (isVisible)
{
    <div class="modal fade show" style="display:block" tabindex="-1" aria-modal="true" role="dialog">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@exercise.Name exercise summary</h5>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="Hide"></button>
                </div>
                <div class="modal-body">
                    <div class="row" style="background-color: lightgrey">
                        <div class="col">
                            <h4>Description: @(exercise.Notes ?? "No description for this exercise")</h4>
                        </div>
                        <div class="col-auto">
                            <h4>Type: @exercise.Type</h4>
                        </div>
                    </div>
                    @if (workouts.Count == 0)
                    {
                        <div class="row">
                            <h3>You have not done any sets of this exercise</h3>
                        </div>
                    }
                    else
                    {
                        <div class="row">
                            <ExerciseChart Exercise="exercise" Workouts="workouts" Sets="sets" />
                        </div>
                        <div class="row">
                            <WorkoutsByExercise Exercise="exercise" Workouts="workouts" Sets="sets" />
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button class="btn btn-info" @onclick="Hide">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    private bool isVisible = false;

    private Exercise exercise = new();
    private List<Workout> workouts = [];
    private List<Sets> sets = [];

    public async Task Show(Exercise ex)
    {
        exercise = ex;
        isVisible = true;

        var allSets = await SportAPI.GetSetsByExercise(exercise.Id);
        sets = allSets.Where(s => s.IsDone).ToList();
        var workoutIds = sets.Select(s => s.Workout_Id).Distinct();

        workouts = [];
        foreach (var workoutId in workoutIds)
        {
            workouts.AddRange(await SportAPI.GetWorkout(workoutId));
        }
        StateHasChanged();
    }

    public void Hide()
    {
        isVisible = false;
        StateHasChanged();
    }
}
