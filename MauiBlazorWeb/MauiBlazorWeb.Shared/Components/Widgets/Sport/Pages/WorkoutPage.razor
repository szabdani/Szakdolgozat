@page "/workout/id={WorkoutId:int}"
@inherits SportCompBase

@using Bases
@using MauiBlazorWeb.Shared.Components.Dialogs
@using Models.Sports

@if (!_appState.IsLoggedIn)
{
	<NotLoggedIn />
}
else if (hasInvalidParameter)
{
	<h3>This is not a valid path to a Workout Page</h3>
}
else
{

	<div class="col-auto m-2" style="background-color: navajowhite">
		sima workout
	</div>
}

@code {
	[Parameter, EditorRequired]
	public int WorkoutId { get; set; }

	private Account_does_Sport accountDoesSport;
	private Sport sport;
	private Workout workout;

	public WorkoutPage()
	{
		accountDoesSport = new Account_does_Sport();
		sport = new Sport();
		workout = new Workout();
	}
	protected override async Task ValidateParameters()
	{
		workout = await ValidateWorkout(WorkoutId);
		accountDoesSport = ValidateAccountDoesSport(workout.Account_does_Sport_Id);
		sport = ValidateSport(accountDoesSport.Sport_Id);

		await base.ValidateParameters();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		await base.OnAfterRenderAsync(firstRender);
		if (firstRender)
		{
			if (!hasInvalidParameter)
				await InvokeAsync(() => _appState.Title = $"{sport.Name} workout on {workout.Starttime.ToString("yyyy-MM-dd")}");
			else
				await InvokeAsync(() => _appState.Title = "Invalid Workout");

			await InvokeAsync(() => _appState.MainLayout.RerenderLayout());
		}
	}
}