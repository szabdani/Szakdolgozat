@inherits SportCompBase

@using Bases
@using Models.Sports
@using MauiBlazorWeb.Shared.Components.Icons
@using MauiBlazorWeb.Shared.Components.Widgets.Sport.Dialogs

@foreach (var ex in exercises)
{
	<div class="col m-1 h5" style="background-color: floralwhite">
		<div class="row">
			<div class="col">
				@numberOfSets[ex.Id] Set@(numberOfSets[ex.Id] > 1 ? "s" : "") of @ex.Name
			</div>
			<div class="col-auto float-end">
				<button class="btn btn-info" @onclick="() =>{if(exerciseDialog is not null) {exerciseDialog?.Show(ex);}}">
					<IconAdd />
				</button>
			</div>
		</div>
	</div>
}

<ExerciseDialog AccountDoesId="Workout.Account_does_Sport_Id" @ref="exerciseDialog" />

@code {
	[Parameter]
	public required Workout Workout { get; set; }

	private ExerciseDialog? exerciseDialog;

	private Workout routineExampleWorkout = new();

	private Dictionary<int, int> numberOfSets = new();
	private List<Exercise> exercises = new();
	private readonly SemaphoreSlim semaphore = new SemaphoreSlim(1, 1);

	protected override async Task UpdateTables()
	{
		await base.UpdateTables();

		if (Workout.Routine_Id is not null)
			routineExampleWorkout = (await SportAPI.GetRoutineExample(Workout.Account_does_Sport_Id, (int)Workout.Routine_Id)).First();
		
		await semaphore.WaitAsync();

		var sets = await SportAPI.GetSetsByWorkout(Workout.Id);
		var exIds = sets.Select(s => s.Exercise_Id).Distinct().ToList();

		if (exIds.Count > exercises.Count)
		{
			List<int> addedIds = exIds.Except(exercises.Select(e => e.Id)).ToList();

			foreach (var id in addedIds)
			{
				List<Exercise> exList = await SportAPI.GetExercise(id);
				Exercise ex = exList.First();
				exercises.Add(ex);
				numberOfSets[id] = sets.Where(s => s.Exercise_Id == id).Count();
			}
		}
		else if (exIds.Count < exercises.Count)
		{
			List<int> deletedIds = exercises.Select(e => e.Id).Except(exIds).ToList();

			foreach (var id in deletedIds)
			{
				exercises.RemoveAll(ex => ex.Id == id);
				numberOfSets.Remove(id);
			}
		}
		
		semaphore.Release();
	}

	private void GoToWorkout(Workout workout)
	{
		Navigation.NavigateTo($"workout/id={workout.Id}", true);
	}
}
