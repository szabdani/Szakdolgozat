@using Models
@using Blazored.LocalStorage

@inject ILocalStorageService localStorage

<div class="top-row ps-3 navbar navbar-dark border-bottom">
    <div class="container-fluid">
        <a class="navbar-brand" href="">LifeTracker</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
     <nav class="flex-column mb-auto d-flex h-100">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        @if (userInfo.isLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="diary">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Diary
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="habits">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Habits
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="sports">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Sports
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="statistics">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Statistics
                </NavLink>
            </div>
        }
        
        <div class="nav-item px-3 border-top mt-auto">
            <DropUp />
        </div>
    </nav>
</div>

@code
{
    [CascadingParameter]
    public Action<UserInfo>? UpdateUserInfo { get; set; }
    private UserInfo userInfo { get; set; } = new UserInfo();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await userInfo.UpdateInfo(localStorage);
            await InvokeAsync(StateHasChanged);
        }
    }
}