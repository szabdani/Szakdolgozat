@using MauiBlazorWeb.Shared.Components.Pages
@using Interfaces
@using Blazored.LocalStorage

@inject ILocalStorageService _localStorage
@inject NavigationManager Navigation
@inject IAppState _appState

<div class="dropdown">
    @if (isDropdownOpen)
    {
        <ul class="dropdown-menu dropdown-menu-dark text-small shadow show">
            @if (_appState.IsLoggedIn)
            {
                <li><a class="dropdown-item" href="profile" @onclick="ToggleDropdown">Profile</a></li>
                <li><a class="dropdown-item" href="#" @onclick="SignOut">Sign out</a></li>
            }
            else
            {
                <li><a class="dropdown-item" href="login" @onclick="ToggleDropdown">Log In</a></li>            
                <li><a class="dropdown-item" href="register" @onclick="ToggleDropdown">Register</a></li>
            }
        </ul>
    }
</div>
<NavLink class="nav-link d-flex align-items-center text-white" @onclick="ToggleDropdown">
    <img src=@_appState.CurrentUser.PfpPath width="32" height="32" class="rounded-circle me-2">
    <strong>@_appState.CurrentUser.Username</strong>
</NavLink>

@code {
    public async Task RerenderDropUp()
    {
        await InvokeAsync(StateHasChanged);
    }

    private bool isDropdownOpen = false;

    private void SignOut()
    {
        ToggleDropdown();
        _appState.Logout(_localStorage);
        Navigation.NavigateTo("", forceLoad: true);
    }

    private void ToggleDropdown()
    {
        isDropdownOpen = !isDropdownOpen;
    }


}
