@inherits DiaryCompBase

@using MauiBlazorWeb.Shared.BasePages
@using MauiBlazorWeb.Shared.Components.Icons
@using MauiBlazorWeb.Shared.Components.Dialogs.Diary

<div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
	<table class="table text-center">
		<thead class="thead-light" style="position: sticky; top: 0; background-color: #ffefef">
			<tr>
				<th scope="col">Date</th>
				@foreach (var col in allCols)
				{
					<th scope="col">
						@col.Name
						<button class="btn btn-warning" @onclick="() => editHabitDialog.Show(col)">
							<IconEdit />
						</button>
					</th>
				}
				<th scope="col">
					<button class="btn btn-info" @onclick="() => newHabitDialog.Show()">
						<IconAdd />
					</button>
				</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var date in uniqueDates)
			{
				<tr class="@(date.Month % 2 == 1 ? "lightrow" : "darkrow")">
					<th scope="row">@date.ToString("yyyy-MM-dd")</th>
					@foreach (var col in allCols)
					{
						var post = allPosts.FirstOrDefault(p => p.Diary_log_column_Id == col.Id && p.Date == date);
						<td class="tracker-post" @onclick="() => ToggleHabitValue(col.Id, date)">
							@(post?.Value ?? "")
						</td>
					}
					<th>
						<button class="btn btn-danger" @onclick="() => DeleteRow(date)">
							<IconDelete />
						</button>
					</th>
				</tr>
			}
		</tbody>
		<tfoot style="position: sticky; bottom: 0; background-color: #ffefef">
			<tr>
				<th scope="row">
					<button type="button" class="btn btn-info w-100" @onclick="()=>newEntryDialog.Show()">
						<IconAdd />
					</button>
				</th>
				@foreach (var col in allCols)
				{
					<th>
						@allPosts.Where(p => p.Diary_log_column_Id == col.Id && p.Value == "X").Count()
					</th>
				}
				<th>
					Sum
				</th>
			</tr>
		</tfoot>
	</table>
</div>

<NewDiaryColDialog IsHabit="IsHabit" RerenderParent="RerenderDiaryComp" @ref=newHabitDialog />
<EditDiaryColDialog IsHabit="IsHabit" RerenderParent="RerenderDiaryComp" @ref=editHabitDialog />
<NewDiaryEntryDialog IsHabit="IsHabit" RerenderParent="RerenderDiaryComp" @ref=newEntryDialog />

@code {
	private List<DateTime> uniqueDates;
	private NewDiaryColDialog newHabitDialog;
	private EditDiaryColDialog editHabitDialog;
	private NewDiaryEntryDialog newEntryDialog;

	public AllColumnsTable()
	{
		uniqueDates = new List<DateTime>();
		newHabitDialog = new NewDiaryColDialog();
		editHabitDialog = new EditDiaryColDialog();
		newEntryDialog = new NewDiaryEntryDialog();
	}

	protected override async Task UpdateTables()
	{
		await base.UpdateTables();
		uniqueDates = allPosts.Select(obj => obj.Date).Distinct().OrderBy(date => date).ToList();
	}
}

<style>
	.lightrow {
		background-color: #ffefef;
	}

	.darkrow {
		background-color: #f2e3e3;
	}

	.tracker-post {
		vertical-align: middle;
		background-color: #f9f9f9;
		cursor: pointer;
		transition: background-color 0.3s;
	}

		.tracker-post:hover {
			background-color: #d0f0ff;
		}
</style>
