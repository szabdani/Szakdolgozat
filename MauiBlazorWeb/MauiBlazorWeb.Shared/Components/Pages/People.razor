@page "/people"
@using DataLibrary
@using Models
@using Microsoft.Extensions.Configuration
@inject IDataAccess _data
@inject IConfiguration _config

<h3>People</h3>
<button class="btn btn-primary" @onclick="InsertData">Insert</button>
<button class="btn btn-warning" @onclick="UpdateData">Update</button>
<button class="btn btn-danger" @onclick="DeleteData">Delete</button>

@if (films == null)
{
	<p><em>Loading...</em></p>
}
else
{
	foreach(var film in films)
	{
		<p>
			@film.Cim @film.Ev @film.Orszag @film.Stilus
		</p>
	}
}


@code {
	List<Film> films;

	private async Task InsertData()
	{
		string sql = "Insert into filmek (Cim, ev, orszag, stilus) values (@Cim, @Ev, @Orszag, @Stilus);";

		await _data.SaveData(sql, new { Cim = "Filmes", Ev = 1999, Orszag = "Magyaro.", Stilus = "horror" },_config.GetConnectionString("DefaultConnection"));
	
		await OnInitializedAsync();
	}

	private async Task UpdateData()
	{
		string sql = "Update filmek set ev = 2222 where cim = 'Shrek'";
		await _data.SaveData(sql, new { }, _config.GetConnectionString("DefaultConnection"));

		await OnInitializedAsync();
	}

	private async Task DeleteData()
	{
		string sql = "Delete from filmek where stilus = 'horror'";
		await _data.SaveData(sql, new { }, _config.GetConnectionString("DefaultConnection"));

		await OnInitializedAsync();
	}

	protected override async Task OnInitializedAsync()
	{
		string sql = "select * from filmek";
		films = await _data.LoadData<Film, dynamic>(sql, new { }, _config.GetConnectionString("DefaultConnection"));
	}
}
