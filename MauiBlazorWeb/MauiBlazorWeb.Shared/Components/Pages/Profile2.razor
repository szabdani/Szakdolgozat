@page "/profile2"

@using MauiBlazorWeb.Shared.Components.Dialogs
@using Interfaces
@inject IAppState _appState

@if (!_appState.IsLoggedIn)
{
	<h1>This page is only available to users!</h1>
	<LoginPrompt />
}
else
{
	<div class="row">
		<div class="col">
			<div class="row">
				<label class="col-sm-2">Username:</label>
				<div class="col-sm-2">
					@_appState.CurrentUser.Username
				</div>
				<div class="col-sm-3 d-flex align-items-center">
					<button type="button" class="btn btn-primary" @onclick="()=> usernameEdit.Show()">Edit</button>
				</div>
			</div>
			<div class="row">
				<label class="col-sm-2">Email:</label>
				<div class="col-sm-2">
					@_appState.CurrentUser.Email
				</div>
				<div class="col-sm-3 d-flex align-items-center">
					<button type="button" class="btn btn-primary" @onclick="()=> emailEdit.Show()">Edit</button>
				</div>
			</div>
			<div class="row">
				<label class="col-sm-2">Birthdate:</label>
				<div class="col-sm-2">
					@_appState.CurrentUser.Birthdate.Date
				</div>
				<div class="col-sm-3 d-flex align-items-center">
					<button type="button" class="btn btn-primary" @onclick="()=> birthdateEdit.Show()">Edit</button>
				</div>
			</div>
			<div class="row">
				<label class="col-sm-2">Gender:</label>	
				<div class="col-sm-2">
					@_appState.CurrentUser.Gender
				</div>
				<div class="col-sm-3 d-flex align-items-center">
					<button type="button" class="btn btn-primary" @onclick="()=> genderEdit.Show()">Edit</button>
				</div>
			</div>
			<div class="row">
				<label class="col-sm-2">Password:</label>
				<div class="col-sm-2">
					-
				</div>
				<div class="col-sm-3 d-flex align-items-center">
					<button type="button" class="btn btn-primary" @onclick="()=> passwordEdit.Show()">Edit</button>
				</div>
			</div>
		</div>
		<div class="col">
			Import data
		</div>
	</div>
	<EditUsernameDialog @ref="usernameEdit">
		<div class="row">
			<div class="col-sm">
				Current Username:
			</div>
			<div class="col-sm">
				@_appState.CurrentUser.Username
			</div>
		</div>
	</EditUsernameDialog>
	<EditEmailDialog @ref="emailEdit">
		<div class="row">
			<div class="col-sm">
				Current Email:
			</div>
			<div class="col-sm">
				@_appState.CurrentUser.Email
			</div>
		</div>
	</EditEmailDialog>
	<EditBirthdateDialog @ref="birthdateEdit">
		<div class="row">
			<div class="col-sm">
				Current Birth date:
			</div>
			<div class="col-sm">
				@_appState.CurrentUser.Birthdate.Date.ToString()
			</div>
		</div>
	</EditBirthdateDialog>
	<EditGenderDialog @ref="genderEdit">
		<div class="row">
			<div class="col-sm">
				Current Gender:
			</div>
			<div class="col-sm">
				@_appState.CurrentUser.Gender
			</div>
		</div>
	</EditGenderDialog>
	<EditPasswordDialog @ref="passwordEdit">
		<div class="row">
			Enter your previous password for conformation.
		</div>
	</EditPasswordDialog>
}

@code {
	[CascadingParameter] public Action? RerenderLayout { get; set; }
	[CascadingParameter] public Action<bool>? SetLoadingScreen { get; set; }

	private EditUsernameDialog usernameEdit;
	private EditEmailDialog emailEdit;
	private EditBirthdateDialog birthdateEdit;
	private EditGenderDialog genderEdit;
	private EditPasswordDialog passwordEdit;

	public Profile2()
	{
		usernameEdit = new EditUsernameDialog();
		emailEdit = new EditEmailDialog();
		birthdateEdit = new EditBirthdateDialog();
		genderEdit = new EditGenderDialog();
		passwordEdit = new EditPasswordDialog();
	}

	protected override async Task OnInitializedAsync()
	{
		await InvokeAsync(() => _appState.Title = "Profile");
		await InvokeAsync(() => RerenderLayout?.Invoke());
	}
}
