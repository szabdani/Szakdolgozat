@page "/habits"

@inherits DiariesBase

@using MauiBlazorWeb.Shared.BasePages
@using MauiBlazorWeb.Shared.Components.Dialogs
@using MauiBlazorWeb.Shared.Components.DiaryComps
@using Interfaces

@inject IAppState _appState

@if (!_appState.IsLoggedIn)
{
	<div class="row">
		<div class="col m-2" style="background-color: #ffefef">
			<div class="row">
				<div class ="col">
					<h1>This page is only available to users!</h1>
				</div>
			</div>
			<div class="row">
				<div class ="col">
					<LoginPrompt />
				</div>
			</div>
		</div>
	</div>
}
else
{
	<div class="row" style="overflow-x: auto;">
		<div class="col m-2" style="background-color: #ffefef;">
			<HabitsTable IsHabit="true" RerenderParent="UpdateDiaryComponents" @ref="table" />
		</div>
	</div>
	<div class="row">
		<div class="col m-2" style="background-color: #ffefef">
			Statisztika gyakoriságról<br />
			lehet választani adatok, heti/havi/évi/összes felosztáson, és a megjelenésen is<br />
			ezeket a táblákat meg kell jegyezni, lehet újakat felvenni, itt maradnak ezen a képernyőn és frissülnek mindig
		</div>
		<div class="col m-2" style="background-color: #ffefef">
			<HabitStat IsHabit="true" RerenderParent="UpdateDiaryComponents" @ref="stat" />
		</div>
	</div>
}
@code {
	private HabitsTable table;
	private HabitStat stat;

	public Habits()
	{
		table = new HabitsTable();
		stat = new HabitStat();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			allDiaryComps.Add(table);
			allDiaryComps.Add(stat);

			await InvokeAsync(() => _appState.Title = "Habit Tracker");
			await InvokeAsync(() => _appState.MainLayout.RerenderLayout());
		}
	}
}

