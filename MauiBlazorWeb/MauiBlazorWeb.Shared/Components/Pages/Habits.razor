@page "/habits"

@using MauiBlazorWeb.Shared.Components.Dialogs
@using Models
@using Interfaces
@inject IAppState _appState
@inject IDataAccess _data

@if (!_appState.IsLoggedIn)
{
	<h1>This page is only available to users!</h1>
	<LoginPrompt />
}
else
{
	<button class="btn btn-primary" @onclick="InsertData">Insert</button>
	<button class="btn btn-warning" @onclick="UpdateData">Update</button>
	<button class="btn btn-danger" @onclick="DeleteData">Delete</button>

	@if (_appState.ExistingUsers == null)
	{
		<p><em>Loading...</em></p>
	}
	else
	{
		foreach (var acc in _appState.ExistingUsers)
		{
			<p>
				@acc.Username @acc.Gender @acc.Admin
			</p>
		}
	}
}

@code {
	[CascadingParameter] public Action RerenderLayout { get; set; }
	[CascadingParameter] public Action<bool> SetLoadingScreen { get; set; }
	protected override async Task OnInitializedAsync()
	{
		await InvokeAsync(() => _appState.Title = "Habits");
		await InvokeAsync(() => RerenderLayout?.Invoke());
	}

	private async Task InsertData()
	{
		string sql = "Insert into account (username, gender) values (@a, @c);";

		await _data.SaveData(sql, new { a = "random", c = "Male"});

		await OnInitializedAsync();
	}

	private async Task UpdateData()
	{
		string sql = "Update account set gender = 'Other' where username = 'random'";
		await _data.SaveData(sql, new { });

		await OnInitializedAsync();
	}

	private async Task DeleteData()
	{
		string sql = "Delete from account where  gender = 'Other'";
		await _data.SaveData(sql, new { });

		await OnInitializedAsync();
	}


}

