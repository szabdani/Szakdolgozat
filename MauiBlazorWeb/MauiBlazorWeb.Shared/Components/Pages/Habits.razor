@page "/habits"

@using MauiBlazorWeb.Shared.Components.Dialogs
@using Models.Diaries
@using Interfaces
@inject IAppState _appState
@inject IDataAccess _data
@inject IDiaryManager _diaryManager

@if (!_appState.IsLoggedIn)
{
	<h1>This page is only available to users!</h1>
	<LoginPrompt />
}
else
{
	<div class="row">
		<div class="col-sm-2">
			<a type="button" class="btn btn-info w-100" href="NewHabits">Add a new Habit</a>
		</div>
	</div>
	<div class="row">
		All the habits that you track
	</div>
}

@code {
	private List<Diary_log_column> habitCols = new List<Diary_log_column>();
	private List<Diary_log_post> habitPosts = new List<Diary_log_post>();
	protected override async Task OnInitializedAsync()
	{
		await InvokeAsync(() => _appState.MainLayout.SetLoadingScreen(true));

		await InvokeAsync(() => _appState.Title = "Habit Tracker");
		await InvokeAsync(() => _appState.MainLayout.RerenderLayout());

		habitCols = await _diaryManager.GetHabitCols(_appState.CurrentUser.Id);
		if (habitCols.Count != 0)
		{
			foreach (var col in habitCols)
			{
				var result = await _diaryManager.GetDiaryPosts(col.Id);
				if(result.Count != 0)
					habitPosts.AddRange(result);
			}
		}

		await InvokeAsync(StateHasChanged);
		await InvokeAsync(() => _appState.MainLayout.SetLoadingScreen(false));
	}
}

