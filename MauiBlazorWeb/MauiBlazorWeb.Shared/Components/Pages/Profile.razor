@page "/profile"

@using MauiBlazorWeb.Shared.Components.Dialogs.Account
@using MauiBlazorWeb.Shared.Components.Dialogs
@using Interfaces
@inject IAppState _appState

@if (!_appState.IsLoggedIn)
{
	<div class="row">
		<div class="col m-2" style="background-color: #ffefef">
			<div class="row">
				<div class ="col">
					<h1>This page is only available to users!</h1>
				</div>
			</div>
			<div class="row">
				<div class ="col">
					<LoginPrompt />
				</div>
			</div>
		</div>
	</div>
}
else
{
	<div class="row">
		<div class="col m-2" style="background-color: #ffefef">
			<div class="row">
				<label class="col-sm-2">Username:</label>
				<div class="col-sm-4">
					@_appState.CurrentUser.Username
				</div>
				<div class="col d-flex align-items-center">
					<button type="button" class="btn btn-primary" @onclick="()=> usernameEdit.Show()">Edit</button>
				</div>
			</div>
			<div class="row">
				<label class="col-sm-2">Password:</label>
				<div class="col-sm-4">
					-
				</div>
				<div class="col d-flex align-items-center">
					<button type="button" class="btn btn-primary" @onclick="()=> passwordEdit.Show()">Edit</button>
				</div>
			</div>
			<div class="row">
				<label class="col-sm-2">Email:</label>
				<div class="col-sm-4">
					@_appState.CurrentUser.Email
				</div>
				<div class="col d-flex align-items-center">
					<button type="button" class="btn btn-primary" @onclick="()=> emailEdit.Show()">Edit</button>
				</div>
			</div>
			<div class="row">
				<label class="col-sm-2">Birthdate:</label>
				<div class="col-sm-4">
					@_appState.CurrentUser.Birthdate.ToShortDateString()
				</div>
				<div class="col d-flex align-items-center">
					<button type="button" class="btn btn-primary" @onclick="()=> birthdateEdit.Show()">Edit</button>
				</div>
			</div>
			<div class="row">
				<label class="col-sm-2">Gender:</label>
				<div class="col-sm-4">
					@_appState.CurrentUser.Gender
				</div>
				<div class="col d-flex align-items-center">
					<button type="button" class="btn btn-primary" @onclick="()=> genderEdit.Show()">Edit</button>
				</div>
			</div>
		</div>
		<div class="col m-2" style="background-color: #ffefef">
			Import data
		</div>
	</div>

	<EditAccountDialog RerenderParent="RerenderProfile" @ref="usernameEdit">
		<EditUsernameDialog />
	</EditAccountDialog>
	<EditAccountDialog RerenderParent="RerenderProfile" @ref="passwordEdit">
		<EditPasswordDialog />
	</EditAccountDialog>
	<EditAccountDialog RerenderParent="RerenderProfile" @ref="emailEdit">
		<EditEmailDialog />
	</EditAccountDialog>
	<EditAccountDialog RerenderParent="RerenderProfile" @ref="birthdateEdit">
		<EditBirthdateDialog />
	</EditAccountDialog>
	<EditAccountDialog RerenderParent="RerenderProfile" @ref="genderEdit">
		<EditGenderDialog />
	</EditAccountDialog>
}

@code {
	private EditAccountDialog usernameEdit;
	private EditAccountDialog passwordEdit;
	private EditAccountDialog emailEdit;
	private EditAccountDialog birthdateEdit;
	private EditAccountDialog genderEdit;
	

	public Profile()
	{
		usernameEdit = new EditAccountDialog();
		passwordEdit = new EditAccountDialog();
		emailEdit = new EditAccountDialog();
		birthdateEdit = new EditAccountDialog();
		genderEdit = new EditAccountDialog();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await InvokeAsync(() => _appState.Title = "Profile");
			await InvokeAsync(() => _appState.MainLayout.RerenderLayout());
		}
	}

	public async Task RerenderProfile()
	{
		await InvokeAsync(StateHasChanged);
	}	 
}
