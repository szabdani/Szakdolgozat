@page "/sports"

@using Blazored.LocalStorage
@inject ILocalStorageService localStorage
@inject IJSRuntime JS   

<h3>Local Storage Example</h3>

<button @onclick="SaveToLocalStorage">Save to Local Storage</button>
<button @onclick="GetFromLocalStorage">Get from Local Storage</button>
<button @onclick="RemoveFromLocalStorage">Remove from Local Storage</button>

<p>Stored Value: @storedValue</p>

@code {
    [CascadingParameter]
    public Action<string>? UpdateTitle { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => UpdateTitle?.Invoke("Sports"));
    }

    private string storedValue;

    private async Task SaveToLocalStorage()
    {
        await localStorage.SetItemAsync("username", "name");
        await JS.InvokeVoidAsync("alert", "sziaaa");
    }

    private async Task GetFromLocalStorage()
    {
        storedValue = await localStorage.GetItemAsync<string>("username") ?? "Not found";
    }

    private async Task RemoveFromLocalStorage()
    {
        await localStorage.RemoveItemAsync("username");
        storedValue = "Value removed.";
    }
}