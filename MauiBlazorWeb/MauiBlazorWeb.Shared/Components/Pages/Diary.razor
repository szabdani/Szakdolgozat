@page "/diary"

@using MauiBlazorWeb.Shared.Components.Dialogs
@using MauiBlazorWeb.Shared.Components.Widgets.Diaries
@using Interfaces

@inject IAppState _appState

@if (!_appState.IsLoggedIn)
{
	<div class="row">
		<div class="col m-2" style="background-color: #ffefef">
			<div class="row">
				<div class="col">
					<h1>This page is only available to users!</h1>
				</div>
			</div>
			<div class="row">
				<div class="col">
					<LoginPrompt />
				</div>
			</div>
		</div>
	</div>
}
else
{
	<div class="row">
		<div class="col m-2" style="background-color: #ffefef">
			<DiaryCalendar />
		</div>
		<div class="col m-2" style="background-color: #ffefef">
			Utolsó 7 nap bejegyzései
		</div>
		<div class="col m-2">
			<div class="row mb-2">
				<div class="col" style="background-color: #ffefef">
					<button class="btn btn-info w-100" @onclick="() => newHabitDialog.Show()">
						Add a new Diary column!
					</button>
				</div>
			</div>
			<div class="row">
				<div class="col" style="background-color: #ffefef">
					Statisztika egyes adatokról, lehet köztük léptetni
				</div>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col m-2" style="background-color: #ffefef">
			<HabitsTable IsHabit="false" />
		</div>
	</div>

	<NewDiaryColDialog IsHabit="false" @ref=newHabitDialog />
}

@code {
	private NewDiaryColDialog newHabitDialog;

	public Diary()
	{
		newHabitDialog = new NewDiaryColDialog();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{

			await InvokeAsync(() => _appState.Title = "Diary");
			await InvokeAsync(() => _appState.MainLayout.RerenderLayout());
		}
	}
}

